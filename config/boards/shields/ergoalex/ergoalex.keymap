#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define XXX &none
#define ___ &trans

#define DEF 0
#define NAV 1
#define SPL 2
#define SPR 3
#define NUM 4
#define BT 5

/ {
    behaviors {
        colon: colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hl: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>; 
        };

        hr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>; 
        };

        sft: shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &colon         &kp COMMA  &kp DOT    &kp P  &kp Y           &kp F    &kp G      &kp C      &kp R  &kp L
                &sft LSHFT A   &kp O      &hr SPR E  &kp U  &kp I           &kp D    &hl NUM H  &hl SPL T  &kp N  &sft RSHFT S
                &kp SQT        &kp Q      &kp J      &kp K  &kp X           &kp B    &kp M      &kp W      &kp V  &kp Z
                                          &mo BT     &kp SPACE              &mo NAV  &kp RMETA
            >;
        };

        nav_layer {
            bindings = <
            &kp ESC         &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(FSLH)       ___           &kp LA(LEFT)  &kp UP    &kp LA(RIGHT)  ___
            &kp LSHFT       &kp LG(Z)  &kp DEL    &kp RET    ___                &kp LG(LEFT)  &kp LEFT      &kp DOWN  &kp RIGHT      &kp LG(RIGHT)
            &kp LG(LS(N4))  ___        ___        &kp TAB    ___                ___           ___           ___       ___            ___
                                                      ___    ___                ___           ___   
            >;
        };

        spl_layer {
            bindings = <
                &kp EXCL  &kp RBRC  &kp RBKT  &kp RPAR  &kp PRCNT     ___  ___  ___  ___  ___
                &kp PLUS  &kp LBRC  &kp LBKT  &kp LPAR  &kp EQUAL     ___  ___  ___  ___  ___
                &kp STAR  &kp HASH  &kp BSLH  &kp FSLH  &kp AT        ___  ___  ___  ___  ___
                                              ___       ___           ___ ___
            >;
        };

        spr_layer {
            bindings = <
                ___  ___  ___  ___  ___     ___        &kp AMPS   &kp PIPE   &kp CARET  ___
                ___  ___  ___  ___  ___     &kp EQUAL  &kp GRAVE  &kp UNDER  &kp QMARK  &kp MINUS
                ___  ___  ___  ___  ___     ___        &kp DLLR   &kp TILDE  ___        ___
                               ___  ___     ___        ___
            >;
        };

        num_layer {
            bindings = <
                &kp N5   &kp N6   &kp N7   &kp N8   &kp N9      ___  ___  ___  ___  ___
                &kp N0   &kp N1   &kp N2   &kp N3   &kp N4      ___  ___  ___  ___  ___
                ___  ___  ___  ___  ___     ___  ___  ___  ___  ___
                               ___  ___     ___ ___
            >;
        };

        bt_layer {
            bindings = <
                &bt BT_SEL 0  &bt BT_SEL 1    XXX  XXX  XXX             ___  ___  ___  ___  ___
                &bt BT_CLR    &bt BT_CLR_ALL  XXX  XXX  &sys_reset      ___  ___  ___  ___  ___
                XXX           XXX             XXX  XXX  &bootloader     ___  ___  ___  ___  ___
                                                   XXX  XXX             ___  ___ 
            >;
        };

        blank_layer {
            bindings = <
                ___  ___  ___  ___  ___     ___  ___  ___  ___  ___
                ___  ___  ___  ___  ___     ___  ___  ___  ___  ___
                ___  ___  ___  ___  ___     ___  ___  ___  ___  ___
                               ___  ___     ___ ___
            >;
        };
        
    };
};
