#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define XXX &none
#define ___ &trans

#define DEF 0
#define NAV 1
#define SPL 2
#define SPR 3
#define NUM 4
#define SYS 5

/ { 

    macros {
        mac: macro_combo {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_tap &kp MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_equal {
            timeout-ms = <50>;
            key-positions = <17 14>;
            layers = <DEF>;
            slow-release;
            bindings = <&mac SPL EQUAL>;
        };

        combo_lpar {
            timeout-ms = <50>;
            key-positions = <17 13>;
            layers = <DEF>;
            slow-release;
            bindings = <&mac SPL LPAR>;
        };
        
        combo_rpar {
            timeout-ms = <50>;
            key-positions = <17 3>;
            layers = <DEF>;
            slow-release;
            bindings = <&mac SPL RPAR>;
        };
    };

    behaviors {
        colon: colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hl: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <120>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>; 
        };

        hr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <120>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>; 
        };

        sys: system {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            bindings = <&mo>, <&kp>;
        };

        hl2: home_row_mod_left_slow {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31>; 
        };

        hr2: home_row_mod_right_slow {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>; 
        };

        sft: shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <140>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &colon        &kp COMMA     &kp DOT             &kp P  &kp Y           &kp F         &kp G      &kp C      &kp R         &kp L
                &sft LSHFT A  &hr2 LMETA O  &hr SPR E           &kp U  &hr2 LCTRL I    &hl2 RCTRL D  &hl NUM H  &hl SPL T  &hl2 RMETA N  &sft RSHFT S
                &kp SQT       &kp Q         &kp J               &kp K  &kp X           &kp B         &kp M      &kp W      &kp V         &kp Z
                                            &sys SYS LG(SPACE)  &kp SPACE              &mo NAV       &kp RALT
            >;
        };

        nav_layer {
            bindings = <
            &kp ESC         &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(FSLH)       &kp PG_UP     &kp LA(LEFT)  &kp UP    &kp LA(RIGHT)  ___
            &kp LSHFT       &kp LG(Z)  &kp BSPC   &kp RET    ___                &kp LG(LEFT)  &kp LEFT      &kp DOWN  &kp RIGHT      &kp LG(RIGHT)
            &kp LG(LS(N4))  ___        ___        &kp TAB    ___                &kp PG_DN     ___           ___       ___            ___
                                                  ___        ___                ___           ___   
            >;
        };

        spl_layer {
            bindings = <
                &kp EXCL  &kp RBRC  &kp RBKT  &kp RPAR  &kp PRCNT     ___  ___  ___  ___  ___
                &kp PLUS  &kp LBRC  &kp LBKT  &kp LPAR  &kp EQUAL     ___  ___  ___  ___  ___
                &kp STAR  &kp HASH  &kp BSLH  &kp FSLH  &kp AT        ___  ___  ___  ___  ___
                                              ___       ___           ___  ___
            >;
        };

        spr_layer {
            bindings = <
                ___  ___  ___  ___  ___     ___        &kp AMPS   &kp PIPE   &kp LT     &kp GT
                ___  ___  ___  ___  ___     &kp EQUAL  &kp GRAVE  &kp UNDER  &kp QMARK  &kp MINUS
                ___  ___  ___  ___  ___     ___        &kp DLLR   &kp TILDE  &kp CARET  ___
                               ___  ___     ___        ___
            >;
        };
        

        num_layer {
            bindings = <
                &kp N5  &kp N6  &kp N7   &kp N8  &kp N9     ___  ___  ___  ___  ___
                &kp N0  &kp N1  &kp N2   &kp N3  &kp N4     ___  ___  ___  ___  ___
                ___     ___     ___      ___     ___        ___  ___  ___  ___  ___
                                         ___     ___        ___  ___
            >;
        };

        sys_layer {
            bindings = <
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      ___          ___  ___  ___  ___
                XXX           XXX           XXX           XXX           &sys_reset        &sys_reset   ___  ___  ___  ___
                &bt BT_CLR    XXX           XXX           XXX           &bootloader       &bootloader  ___  ___  ___  ___
                                                          XXX           XXX               ___          ___ 
            >;
        };

        blank_layer {
            bindings = <
                ___  ___  ___  ___  ___     ___  ___  ___  ___  ___
                ___  ___  ___  ___  ___     ___  ___  ___  ___  ___
                ___  ___  ___  ___  ___     ___  ___  ___  ___  ___
                               ___  ___     ___  ___
            >;
        };
        
    };
};
